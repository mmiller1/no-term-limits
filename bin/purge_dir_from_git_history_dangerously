#!/usr/bin/env bash

function error_handler() {
  >&2 echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

# HELP:

dir_name=${1:-}

if [[ -z "$dir_name" ]]; then
  >&2 echo "ERROR: usage $(basename "$0") [dir_name]"
  exit 1
fi

echo "${dir_name}/" >> .gitignore
git filter-branch --index-filter "git rm -rf --cached --ignore-unmatch ${dir_name}/" --prune-empty --tag-name-filter cat -- --all
git for-each-ref --format="%(refname)" refs/original/ | xargs -n 1 git update-ref -d
rm -Rf .git/logs .git/refs/original
git gc --prune=all --aggressive
