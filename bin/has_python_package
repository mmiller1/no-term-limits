#!/usr/bin/env bash

function error_handler() {
  >&2 echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

# HELP: python: checks if a python package is included in a python poetry, pipenv, or requirements.txt file

package_name="$1"
if [[ -z "$package_name" ]]; then
  >&2 echo 'ERROR: need one argument for package_name'
  exit 1
fi

lock_files=(
  poetry.lock
  Pipfile.lock
)

unlock_files=(
  pyproject.toml
  Pipfile
  requirements.txt
)

for lock_file in "${lock_files[@]}" ; do
  if [[ -f "$lock_file" ]]; then
    if grep -qE "\"$package_name\"" "$lock_file"; then
      exit 0
    fi
  fi
done

for unlock_file in "${unlock_files[@]}" ; do
  if [[ -f "$unlock_file" ]]; then
    if grep -qE "^$package_name ?=" "$unlock_file"; then
      exit 0
    fi
  fi
done

exit 1
