#!/usr/bin/env bash

function error_handler() {
  echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

# HELP: rails_tests: runs the last failed test file from get_last_failed_test_file

if [[ "$1" == "-b" ]]; then
  export SHOW_BACKTRACE_ON_TEST_ERRORS=true
  shift
fi

if [[ "$1" == "-s" ]]; then
  export TEST_STOP_ON_ERROR=true
  shift
fi

test_name="${1:-}"
test_file=$(get_last_failed_test_file)

function test_type() {
  if grep -qE '\<spec\/' <<<"$test_file"; then
    echo "rspec"
  else
    echo "test-unit"
  fi
}

test_command="ruby"
if [[ "$(test_type)" == "rspec" ]]; then
  test_command="rspec"
fi

if [[ -f "$test_file" ]]; then
  opts=""
  if [[ -n "$test_name" ]]; then
    if [[ "$(test_type)" == "rspec" ]]; then
      opts=":$test_name"
    else
      opts=" --name /${test_name}/"
    fi
  fi

  echo >log/test.log

  bundle exec "$test_command" ${test_file}${opts}

  if [[ -f log/test.log ]]; then
    if gns DEPRECATION log/test.log; then
      exit 1
    fi
  fi

  if [[ -z "$test_name" ]]; then
    if [[ -z "${RT_OUTPUT_BASE_DIR:-}" ]]; then
      RT_OUTPUT_BASE_DIR=/var/tmp
    fi
    test_type=$(sed -E 's|test/(\w+)/.*|\1|' <<<"$test_file")
    app_identifier=$(repo_name)
    cache_file="${RT_OUTPUT_BASE_DIR}/${app_identifier}_passing_${test_type}_files"

    if [[ -f "$cache_file" ]] && ! grep -qE "^${test_file}$" "$cache_file"; then
      echo "$test_file" >>"$cache_file"
    fi
  fi
else
  >&2 echo "ERROR: Cannot find test file '${test_file}'"
fi
