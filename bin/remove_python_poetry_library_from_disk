#!/usr/bin/env bash

function error_handler() {
  >&2 echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

# HELP: python: removes the given library from the corresponding poetry location. Useful to force poetry to update a package from git or localhost

library_name="${1:-}"
if [[ -z "${1:-}" ]]; then
  >&2 echo "usage: $(basename "$0") [library_name]"
  exit 1
fi

virtual_env_path_line="$(poetry env info | grep Path:)"
virtual_env_full_path="$(awk '{print $2}' <<<"$virtual_env_path_line" || echo '')"

if ! grep -qE '\<pypoetry\>' <<<"$virtual_env_full_path" ; then
  >&2 echo "ERROR: Could not find pypoetry in full path: ${virtual_env_full_path}"
  exit 1
fi

full_path_to_lib="${virtual_env_full_path}/lib/*/site-packages/${library_name}"
if ! ls ${full_path_to_lib} >/dev/null 2>&1 ; then
  >&2 echo "ERROR: Could not find lib on disk. Maybe it needs an underscore or hyphen: ${full_path_to_lib}"
  exit 1
fi

set -x
rm -rf ${full_path_to_lib}
