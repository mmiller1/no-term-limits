#!/usr/bin/env bash

function error_handler() {
  >&2 echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

# HELP: python: run mypy with poetry

# set -x
# import_lines_to_ignore_a="$(run_mypy_with_poetry | grep -B1 'found module but no type hints or library stubs' | grep -v 'found module but no type hints or library stubs' | grep -Ev '^--$')"
# echo "import_lines_to_ignore_a: ${import_lines_to_ignore_a}"
# import_lines_to_ignore="$( (MYPY_PRETTY=false run_mypy_with_poetry 2>/dev/null || echo) | grep 'found module but no type hints or library stubs')"
output="$( (MYPY_PRETTY=false run_mypy_with_poetry 2>/dev/null || echo))"
if grep -q 'found module but no type hints or library stubs' <<< "$output"; then
  import_lines_to_ignore="$(grep 'found module but no type hints or library stubs' <<< "$output")"
else
  exit 0
fi

while read -r import_line_to_ignore; do
  file="$(awk -F ':' '{print $1}' <<< "$import_line_to_ignore")"
  line_number="$(awk -F ':' '{print $2}' <<< "$import_line_to_ignore")"
  hot_sed -i "${line_number}s/\$/  # type: ignore/" "$file"
done <<< "$import_lines_to_ignore"
