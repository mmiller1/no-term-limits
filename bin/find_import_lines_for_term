#!/usr/bin/env bash

function error_handler() {
  >&2 echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

# HELP: finds import lines from elsewhere in the project so that we can add the correct import to the current file from within vim

file_with_term="${1:-}"
term="${2:-}"

if ! command -v rg > /dev/null; then
  >&2 echo "ERROR: this program requires ripgrep"
  exit 1
fi

if [[ -z "${2:-}" ]]; then
  >&2 echo "usage: $(basename "$0") [file_with_term] [term]"
  exit 1
fi

desired_import_expression="import .*\b${term}\b"
if grep -q "$desired_import_expression" "$file_with_term"; then
  >&2 echo "ERROR: '${desired_import_expression}' already exists in this file"
  exit 1
fi

if grep -q '\.py$' <<< "$file_with_term"; then
  # find python imports matching the term, sort by most unique matches, and take the most popular version
  # the awk gets all but the first field/column, because the count is in the first column
  match="$(rg --no-filename --glob '*.py' "$desired_import_expression" | sed -E "s/(import).*/\1 ${term}/")"
  most_popular_matching_import_line="$(sort <<<"$match" | uniq -c | sort -n | awk '{for (i=2; i<NF; i++) printf $i " "; print $NF}' | tail -n 1)"
  echo "$most_popular_matching_import_line"
else
  >&2 echo "ERROR: only python is supported"
  exit 1
fi
